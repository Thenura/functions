{"version":3,"file":"build.js","sourceRoot":"","sources":["../../../src/cli/services/build.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,oBAAoB,EAAE,sBAAsB,EAAE,iBAAiB,EAAC,MAAM,sBAAsB,CAAA;AACpG,OAAO,QAAQ,MAAM,UAAU,CAAA;AAC/B,OAAO,EAAC,sBAAsB,EAAC,MAAM,mBAAmB,CAAA;AAExD,OAAO,EAAC,MAAM,EAAQ,MAAM,kBAAkB,CAAA;AAS9C,KAAK,UAAU,KAAK,CAAC,OAAqB;IACxC,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE;QACzC,MAAM,sBAAsB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;KAC1C;IAED,MAAM,GAAG,GAA+B,EAAE,CAAA;IAC1C,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,GAAG,CAAC,eAAe,GAAG,OAAO,CAAC,MAAM,CAAA;KACrC;IAED,MAAM,MAAM,CAAC,UAAU,CAAC;QACtB,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAQ,EAAE,EAAE;YACnC,OAAO;gBACL,MAAM,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI;gBAC9B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAoB,EAAE,EAAE;oBACzE,MAAM,QAAQ,CAAC,OAAO,EAAE,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC,CAAC,CAAA;gBAC7D,CAAC;aACF,CAAA;QACH,CAAC,CAAC;QACF;YACE,MAAM,EAAE,kBAAkB;YAC1B,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAoB,EAAE,EAAE;gBACzE,MAAM,oBAAoB,CAAC;oBACzB,GAAG,EAAE,OAAO,CAAC,GAAG;oBAChB,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK;oBACxC,MAAM;oBACN,MAAM;oBACN,MAAM;iBACP,CAAC,CAAA;YACJ,CAAC;SACF;QACD,GAAG,iBAAiB,CAAC,OAAO,CAAC;QAC7B,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,EAAE;YAC3D,OAAO;gBACL,MAAM,EAAE,iBAAiB,CAAC,eAAe;gBACzC,MAAM,EAAE,KAAK,EAAE,MAAgB,EAAE,MAAgB,EAAE,MAAoB,EAAE,EAAE;oBACzE,MAAM,sBAAsB,CAAC,iBAAiB,EAAE,EAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC,CAAA;gBAC7F,CAAC;aACF,CAAA;QACH,CAAC,CAAC;KACH,CAAC,CAAA;IAEF,MAAM,CAAC,OAAO,EAAE,CAAA;IAChB,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAA;AAC7C,CAAC;AAED,eAAe,KAAK,CAAA","sourcesContent":["import {buildThemeExtensions, buildFunctionExtension, buildUIExtensions} from './build/extension.js'\nimport buildWeb from './web.js'\nimport {installAppDependencies} from './dependencies.js'\nimport {AppInterface, Web} from '../models/app/app.js'\nimport {output, abort} from '@shopify/cli-kit'\nimport {Writable} from 'node:stream'\n\ninterface BuildOptions {\n  app: AppInterface\n  skipDependenciesInstallation: boolean\n  apiKey?: string\n}\n\nasync function build(options: BuildOptions) {\n  if (!options.skipDependenciesInstallation) {\n    await installAppDependencies(options.app)\n  }\n\n  const env: {SHOPIFY_API_KEY?: string} = {}\n  if (options.apiKey) {\n    env.SHOPIFY_API_KEY = options.apiKey\n  }\n\n  await output.concurrent([\n    ...options.app.webs.map((web: Web) => {\n      return {\n        prefix: web.configuration.type,\n        action: async (stdout: Writable, stderr: Writable, signal: abort.Signal) => {\n          await buildWeb('build', {web, stdout, stderr, signal, env})\n        },\n      }\n    }),\n    {\n      prefix: 'theme_extensions',\n      action: async (stdout: Writable, stderr: Writable, signal: abort.Signal) => {\n        await buildThemeExtensions({\n          app: options.app,\n          extensions: options.app.extensions.theme,\n          stdout,\n          stderr,\n          signal,\n        })\n      },\n    },\n    ...buildUIExtensions(options),\n    ...options.app.extensions.function.map((functionExtension) => {\n      return {\n        prefix: functionExtension.localIdentifier,\n        action: async (stdout: Writable, stderr: Writable, signal: abort.Signal) => {\n          await buildFunctionExtension(functionExtension, {stdout, stderr, signal, app: options.app})\n        },\n      }\n    }),\n  ])\n\n  output.newline()\n  output.success(`${options.app.name} built`)\n}\n\nexport default build\n"]}